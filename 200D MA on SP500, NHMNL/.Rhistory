returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
returns.data
returns.data=NULL
for(i in 2:101){
# calling the calculate.return function to find the returns for days given
returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
returns.data
returns.data
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mean.returns=c()
sd.returns=c()
skew.returns=c()
ts.test=c()
occurence.returns=c()
for(i in 1:100){
mean.returns[i]=mean(returns.data[,i])
sd.returns[i]=sd(returns.data[,i])
occurence.returns[i]=Mode(returns.data[,i])
ts.test[i]=t.test(returns.data[,i])$statistic
skew.returns[i]=skewness(returns.data[,i])
}
mean.returns
sd.returns
occurence.returns
skew.returns
ts.test
plot(c(1:100),mean.returns,type="l",xlab="Days",ylab="Mean returns")
calculate.return2 = function(days,check){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.200.MA[i] > 0.95 || ten.200.MA[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
complete.data=NULL
# entry day
if(check==0){
temp=as.character(data$X31.05.90)
complete.data=cbind(complete.data,temp[position])
}else{
complete.data=cbind(complete.data,dates.SP.NHMNL[position])
}
# entry price of day
complete.data=cbind(complete.data,as.integer(Price.SP[position]))
complete.data=cbind(complete.data,Price.SP[position+days])
complete.data=cbind(complete.data,dates.SP.NHMNL[position+days])
complete.data=cbind(complete.data,profit.loss)
complete.data=cbind(complete.data,five.SP[position-1])
complete.data=cbind(complete.data,ten.SP[position-1])
complete.data=cbind(complete.data,five.200.MA[position-1])
complete.data=cbind(complete.data,ten.200.MA[position-1])
colnames(complete.data)=c("Date","Entry.price","Price.45.days.later","Date.Trade.45.later","Return","SP.5.ranks","SP.10.rank","200MA.5d.rank","200MA.10d.rank")
complete.data=as.data.frame(complete.data)
return(complete.data)
}
days=45
value=calculate.return2(days,1)
write.csv(calculate.return2(days,0),"Percentage_of_stock_above_200d_moving_average.csv")
value
value
rm(list=ls())
data=read.csv("SP200.csv")
five.SP=data$SP5
ten.SP =data$SP10
five.200.MA= data$MA5RANK
ten.200.MA= data$MA10RANK
Price.SP=  data$Price
dates.SP.NHMNL= data$Dates
l=length(Price.SP)
calculate.return = function(days){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.200.MA[i] > 0.95 || ten.200.MA[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
position
return(profit.loss)
}
returns.data=NULL
for(i in 2:101){
# calling the calculate.return function to find the returns for days given
returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
returns.data
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mean.returns=c()
sd.returns=c()
skew.returns=c()
ts.test=c()
occurence.returns=c()
for(i in 1:100){
mean.returns[i]=mean(returns.data[,i])
sd.returns[i]=sd(returns.data[,i])
occurence.returns[i]=Mode(returns.data[,i])
ts.test[i]=t.test(returns.data[,i])$statistic
skew.returns[i]=skewness(returns.data[,i])
}
mean.returns
sd.returns
occurence.returns
skew.returns
ts.test
calculate.return2 = function(days,check){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.200.MA[i] > 0.95 || ten.200.MA[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
complete.data=NULL
# entry day
if(check==0){
temp=as.character(data$X31.05.90)
complete.data=cbind(complete.data,temp[position])
}else{
complete.data=cbind(complete.data,dates.SP.NHMNL[position])
}
# entry price of day
complete.data=cbind(complete.data,as.integer(Price.SP[position]))
complete.data=cbind(complete.data,Price.SP[position+days])
complete.data=cbind(complete.data,dates.SP.NHMNL[position+days])
complete.data=cbind(complete.data,profit.loss)
complete.data=cbind(complete.data,five.SP[position-1])
complete.data=cbind(complete.data,ten.SP[position-1])
complete.data=cbind(complete.data,five.200.MA[position-1])
complete.data=cbind(complete.data,ten.200.MA[position-1])
colnames(complete.data)=c("Date","Entry.price","Price.45.days.later","Date.Trade.45.later","Return","SP.5.ranks","SP.10.rank","200MA.5d.rank","200MA.10d.rank")
complete.data=as.data.frame(complete.data)
return(complete.data)
}
days=45
value=calculate.return2(days,1)
write.csv(calculate.return2(days,0),"Percentage_of_stock_above_200d_moving_average.csv")
t.test(value$Return)$statistic
value
mean.returns
plot(sd.returns)
plot(sd.returns,type="l")
plot(skew.returns,type="l")
data=read.csv("FinalData.csv")
data=as.data.frame(data)
data=data[-nrow(data),]
five.SP=data$SP5
ten.SP =data$SP10
five.NHMNL= data$NHMNL5
ten.NHMNL= data$NHMNL10
Price.SP=  data$Price
dates.SP.NHMNL= data$Dates
l=length(five.NHMNL)
calculate.return = function(days){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.NHMNL[i] > 0.95 || ten.NHMNL[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
position
return(profit.loss)
}
returns.data=NULL
for(i in 2:101){
# calling the calculate.return function to find the returns for days given
returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
returns.data
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mean.returns=c()
sd.returns=c()
skew.returns=c()
ts.test=c()
occurence.returns=c()
for(i in 1:100){
mean.returns[i]=mean(returns.data[,i])
sd.returns[i]=sd(returns.data[,i])
occurence.returns[i]=Mode(returns.data[,i])
ts.test[i]=t.test(returns.data[,i])$statistic
skew.returns[i]=skewness(returns.data[,i])
}
mean.returns
sd.returns
occurence.returns
skew.returns
ts.test
plot(sd.returns,type="l")
rm(list=ls())
rm(list=ls())x
rm(list=ls())
library(e1071)
data=read.csv("FinalData.csv")
data
data=as.data.frame(data)
tail(data)
data=read.csv("FinalData.csv")
data=as.data.frame(data)
tail(data)
data=data[-nrow(data),]
tail(data)
data=read.csv("FinalData.csv")
data=as.data.frame(data)
tail(data)
five.SP=data$SP5
ten.SP =data$SP10
five.NHMNL= data$NHMNL5
ten.NHMNL= data$NHMNL10
Price.SP=  data$Price
dates.SP.NHMNL= data$Dates
l=length(five.NHMNL)
returns.data=NULL
for(i in 2:101){
# calling the calculate.return function to find the returns for days given
returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
calculate.return = function(days){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.NHMNL[i] > 0.95 || ten.NHMNL[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
position
return(profit.loss)
}
returns.data=NULL
for(i in 2:101){
# calling the calculate.return function to find the returns for days given
returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
returns.data
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mean.returns=c()
sd.returns=c()
skew.returns=c()
ts.test=c()
occurence.returns=c()
for(i in 1:100){
mean.returns[i]=mean(returns.data[,i])
sd.returns[i]=sd(returns.data[,i])
occurence.returns[i]=Mode(returns.data[,i])
ts.test[i]=t.test(returns.data[,i])$statistic
skew.returns[i]=skewness(returns.data[,i])
}
mean.returns
sd.returns
occurence.returns
skew.returns
ts.test
plot(c(1:100),mean.returns,type="l",xlab="Days",ylab="Mean returns")
data$dates.SP.NHMNL
data
data$Dates
calculate.return2 = function(days,check){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.NHMNL[i] > 0.95 || ten.NHMNL[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
complete.data=NULL
# entry day
if(check==0){
temp=as.character(data$Dates)
complete.data=cbind(complete.data,temp[position])
}else{
complete.data=cbind(complete.data,dates.SP.NHMNL[position])
}
# entry price of day
complete.data=cbind(complete.data,as.integer(Price.SP[position]))
complete.data=cbind(complete.data,Price.SP[position+days])
complete.data=cbind(complete.data,dates.SP.NHMNL[position+days])
complete.data=cbind(complete.data,profit.loss)
complete.data=cbind(complete.data,five.SP[position-1])
complete.data=cbind(complete.data,ten.SP[position-1])
complete.data=cbind(complete.data,five.NHMNL[position-1])
complete.data=cbind(complete.data,ten.NHMNL[position-1])
colnames(complete.data)=c("Date","Entry.price","Price.45.days.later","Date.Trade.45.later","Return","SP.5.ranks","SP.10.rank","NHMNL.5d.rank","NHMNL.10d.rank")
complete.data=as.data.frame(complete.data)
return(complete.data)
}
days=45
value=calculate.return2(days,1)
write.csv(calculate.return2(days,0),"NewHighMinusNewLowIndicators.csv")
value
value
calculate.return2 = function(days,check){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.NHMNL[i] > 0.95 || ten.NHMNL[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
complete.data=NULL
# entry day
if(check==0){
temp=as.character(data$Dates)
complete.data=cbind(complete.data,temp[position])
}else{
complete.data=cbind(complete.data,dates.SP.NHMNL[position])
}
# entry price of day
complete.data=cbind(complete.data,as.integer(Price.SP[position]))
complete.data=cbind(complete.data,Price.SP[position+days])
if(check==0){
temp=as.character(data$Dates)
complete.data=cbind(complete.data,temp[position+days])
}else{
complete.data=cbind(complete.data,dates.SP.NHMNL[position+days])
}
complete.data=cbind(complete.data,profit.loss)
complete.data=cbind(complete.data,five.SP[position-1])
complete.data=cbind(complete.data,ten.SP[position-1])
complete.data=cbind(complete.data,five.NHMNL[position-1])
complete.data=cbind(complete.data,ten.NHMNL[position-1])
colnames(complete.data)=c("Date","Entry.price","Price.45.days.later","Date.Trade.45.later","Return","SP.5.ranks","SP.10.rank","NHMNL.5d.rank","NHMNL.10d.rank")
complete.data=as.data.frame(complete.data)
return(complete.data)
}
days=45
value=calculate.return2(days,1)
write.csv(calculate.return2(days,0),"NewHighMinusNewLowIndicators.csv")
rm(list=ls())
data=read.csv("SP200.csv")
five.SP=data$SP5
ten.SP =data$SP10
five.200.MA= data$MA5RANK
ten.200.MA= data$MA10RANK
Price.SP=  data$Price
dates.SP.200.MA= data$Dates
five.SP
ten.SP
five.200.MA
ten.200.MA
Price.SP
dates.SP.200.MA
l=length(Price.SP)
calculate.return = function(days){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.200.MA[i] > 0.95 || ten.200.MA[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
position
return(profit.loss)
}
returns.data=NULL
for(i in 2:101){
# calling the calculate.return function to find the returns for days given
returns.data=cbind(returns.data,calculate.return(i))
#colnames(returns.data)=i
}
returns.data
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
mean.returns=c()
sd.returns=c()
skew.returns=c()
ts.test=c()
occurence.returns=c()
for(i in 1:100){
mean.returns[i]=mean(returns.data[,i])
sd.returns[i]=sd(returns.data[,i])
occurence.returns[i]=Mode(returns.data[,i])
ts.test[i]=t.test(returns.data[,i])$statistic
skew.returns[i]=skewness(returns.data[,i])
}
mean.returns
sd.returns
occurence.returns
skew.returns
ts.test
plot(c(1:100),mean.returns,type="l",xlab="Days",ylab="Mean returns")
calculate.return2 = function(days,check){
# To Store the positions where we entered the trade
position = c()
# To Calculate profit and loss
profit.loss=c()
# To keep track of out vectors length
t=1
for(i in 1:l){
if(five.SP[i] < 0.10 || ten.SP[i]< 0.10){
if(five.200.MA[i] > 0.95 || ten.200.MA[i]>0.95){
position[t]=i+1
profit.loss[t]=(Price.SP[i+days]/Price.SP[i+1]-1)*100
t=t+1
}
}
}
complete.data=NULL
# entry day
if(check==0){
temp=as.character(data$Dates)
complete.data=cbind(complete.data,temp[position])
}else{
complete.data=cbind(complete.data,dates.SP.200.MA[position])
}
# entry price of day
complete.data=cbind(complete.data,as.integer(Price.SP[position]))
complete.data=cbind(complete.data,Price.SP[position+days])
if(check==0){
temp=as.character(data$Dates)
complete.data=cbind(complete.data,temp[position+days])
}else{
complete.data=cbind(complete.data,dates.SP.200.MA[position+days])
}
complete.data=cbind(complete.data,profit.loss)
complete.data=cbind(complete.data,five.SP[position-1])
complete.data=cbind(complete.data,ten.SP[position-1])
complete.data=cbind(complete.data,five.200.MA[position-1])
complete.data=cbind(complete.data,ten.200.MA[position-1])
colnames(complete.data)=c("Date","Entry.price","Price.45.days.later","Date.Trade.45.later","Return","SP.5.ranks","SP.10.rank","200.MA.5d.rank","200.MA.10d.rank")
complete.data=as.data.frame(complete.data)
return(complete.data)
}
days=45
value=calculate.return2(days,1)
write.csv(calculate.return2(days,0),"Percentage_of_stock_above_200d_moving_average.csv")
t.test(value$Return)$statistic
