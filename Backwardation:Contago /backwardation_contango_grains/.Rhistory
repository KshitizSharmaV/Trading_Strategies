}
previous=Integrand_value
}
print("Integral value is")
print(Integrand_value)
print("To reach convergence the algo needs ")
print(c)
h=0.0002
e=10^-4
c=0
Sum=0
previous=0
for(x in seq(from=0, to=2, by=h)){
s=1 + exp(-x*2) * cos(8*x^(2/3))
if(x==0 | x==2){
s=s/3
}
else if(x %% 2==0){
s=4*s/3
}
else{
s=2*s/3
}
Sum=sum(Sum,s,na.rm = T)
Integrand_value = h*Sum
if(abs(Integrand_value-previous) < e){
break
}
else{
c=c+1
}
previous=Integrand_value
}
print("Integral value is")
print(Integrand_value)
h=0.0002
e=10^-4
c=0
Sum=0
previous=0
for(x in seq(from=0, to=2, by=h)){
s=1 + exp(-x*2) * cos(8*x^(2/3))
if(x==0 | x==2){
s=s/2
}
Sum=sum(Sum,s,na.rm = T)
Integrand_value = h*Sum
if(abs(Integrand_value-previous) < e){
break
}
else{
c=c+1
}
previous=Integrand_value
}
print("Integral value is")
print(Integrand_value)
print("To reach convergence the algo needs ")
print(c)
h=0.0002
e=10^-4
c=0
Sum=0
previous=0
for(x in seq(from=0, to=2, by=h)){
s=1 + exp(-x*2) * cos(8*x^(2/3))
if(x==0 | x==2){
s=s/3
}
else if(x %% 2==0){
s=4*s/3
}
else{
s=2*s/3
}
Sum=sum(Sum,s,na.rm = T)
Integrand_value = h*Sum
if(abs(Integrand_value-previous) < e){
break
}
else{
c=c+1
}
previous=Integrand_value
}
print("Integral value is")
print(Integrand_value)
a=10^6
N=100
e=10^-4
c=0
Sum=0
previous=0
for(i in 2:(N)){
for(n in 1:(i-1)){
x = -a + n * (2 * a)/n
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
h= (-a + 2 * (2 * a)/n) - (-a + 1 * (2 * a)/n)
Integrand_value = h*(1/2 + Sum + sin(n+1)/2)
if(abs(Integrand_value-previous) < e){
break
}
c=c+1
previous=Integrand_value
}
}
print("To reach convergence the algo needs ")
print(c)
Sum
Integrand_value
a=10^6
N=100000000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
a=10^6
N=10000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
h= (-a + 2 * (2 * a)/N) - (-a + 1 * (2 * a)/N)
Integrand_value = h*(1/2 + Sum + sin(N)/2)
print(Integrand_value)
a=10^6
N=100000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
h= (-a + 2 * (2 * a)/N) - (-a + 1 * (2 * a)/N)
Integrand_value = h*(1/2 + Sum + sin(N)/2)
print(Integrand_value)
a=10^6
N=1000000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
h= (-a + 2 * (2 * a)/N) - (-a + 1 * (2 * a)/N)
Integrand_value = h*(1/2 + Sum + sin(N)/2)
print(Integrand_value)
a=10^6
N=10000000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
h= (-a + 2 * (2 * a)/N) - (-a + 1 * (2 * a)/N)
Integrand_value = h*(1/2 + Sum + sin(N)/2)
print(Integrand_value)
?sum()
a=10^6
N=10000000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
Sum
h
Integrand_value = h*(1/2 + Sum + sin(N)/2)
print(Integrand_value)
a=10^6
N=10000000
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
print(Sum)
h= (-a + 2 * (2 * a)/N) - (-a + 1 * (2 * a)/N)
h
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
}
h
h
a=10^6
N=10000000
c=0
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
if(is.na(s)){
c=c+1
}
}
c
a=10^6
N=10000000
c=0
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
if(is.na(s)){
c=c+1
print(x)
}
}
a=10^6
N=10000000
c=0
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
if(is.na(s)){
c=c+1
print(x)
}
}
rm(list=ls())
a=10^6
N=10000000
c=0
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
if(is.na(s)){
c=c+1
print(x)
}
}
print(Sum)
a=10^6
N=10000000
c=0
Sum=0.0
for(n in 1:(N-1)){
x = -a + 0.2*n
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
if(is.na(s)){
c=c+1
print(x)
}
}
print(Sum)
a=10^6
N=10000000
c=0
Sum=0.0
for(n in 1:(N-1)){
x = -a + n * (2 * a)/N
print(x)
s=sin(x)/x
Sum=sum(Sum,s,na.rm = T)
if(is.na(s)){
c=c+1
print(x)
}
}
okay
setwd("~/Desktop/Plus Plus Capital Management/Futures Market Analysis - Plus Plus Capital 4Management 4/Backwardation:Contago /backwardation_contango_grains")
rm(list=ls())
data1=read.csv("SH.csv")
data2=read.csv("WH.csv")
data3=read.csv("CH.csv")
back1=read.csv("Backwardation_for_Soya_Bean.csv")
back2=read.csv("Backwardation_for_Wheat.csv")
back3=read.csv("Backwardation_for_Corn.csv")
mav <- function(x,n=5){filter(x,rep(1/n,n), sides=1)}
final.data.base=NULL
analysis.function = function(n,data,back,result.data.frame){
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
if(n==40){
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[10]$CL0.value/100,Month1_Raw_Price=t[11]$CL1.value/100,Month5_Raw_Price=t[15]$CL5.value/100,Month1_Minus_Month0=(t[11]$CL1.value-t[10]$CL0.value)/(Moving.average.20[i]*100),Month5_Minus_Month0=(t[15]$CL5.value-t[10]$CL0.value)/(Moving.average.20[i]*100),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[10]$CL0.value,Month1_Raw_Price=t[11]$CL1.value,Month5_Raw_Price=t[15]$CL5.value,Month1_Minus_Month0=(t[11]$CL1.value-t[10]$CL0.value),Month5_Minus_Month0=(t[15]$CL5.value-t[10]$CL0.value),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
}
return(result.data.frame)
}
result.data.frame=data.frame(Date=character(),Security_ID=integer(),Month0_Raw_Price=double(),Month1_Raw_Price=double(),Month5_Raw_Price=double(),Month1_Minus_Month0=double(),Month5_Minus_Month0=double(),TR20=double(),Adj.Price=double(),AdjustedLCPrice30=double(),AdjustedLCPrice60=double(),AdjustedLCPrice90=double(),Return30=double(),Return60=double(),Return90=double())
result.data.frame=analysis.function(60,data3,back3,result.data.frame)
result.data.frame=analysis.function(63,data3,back3,result.data.frame)
data3
back3
result.data.frame
rm(list=ls())
data1=read.csv("SH.csv")
data2=read.csv("WH.csv")
data3=read.csv("CH.csv")
back1=read.csv("Backwardation_for_Soya_Bean.csv")
back2=read.csv("Backwardation_for_Wheat.csv")
back3=read.csv("Backwardation_for_Corn.csv")
mav <- function(x,n=5){filter(x,rep(1/n,n), sides=1)}
final.data.base=NULL
analysis.function = function(n,data,back,result.data.frame){
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
if(n==40){
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[10]$CL0.value/100,Month1_Raw_Price=t[11]$CL1.value/100,Month5_Raw_Price=t[15]$CL5.value/100,Month1_Minus_Month0=(t[11]$CL1.value-t[10]$CL0.value)/(Moving.average.20[i]*100),Month5_Minus_Month0=(t[15]$CL5.value-t[10]$CL0.value)/(Moving.average.20[i]*100),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[10]$CL0.value,Month1_Raw_Price=t[11]$CL1.value,Month5_Raw_Price=t[15]$CL5.value,Month1_Minus_Month0=(t[11]$CL1.value-t[10]$CL0.value),Month5_Minus_Month0=(t[15]$CL5.value-t[10]$CL0.value),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
}
return(result.data.frame)
}
result.data.frame=data.frame(Date=character(),Security_ID=integer(),Month0_Raw_Price=double(),Month1_Raw_Price=double(),Month5_Raw_Price=double(),Month1_Minus_Month0=double(),Month5_Minus_Month0=double(),TR20=double(),Adj.Price=double(),AdjustedLCPrice30=double(),AdjustedLCPrice60=double(),AdjustedLCPrice90=double(),Return30=double(),Return60=double(),Return90=double())
result.data.frame=analysis.function(60,data1,back1,result.data.frame)
write.csv(result.data.frame,"answer.csv")
result.data.frame=analysis.function(64,data2,back2,result.data.frame)
write.csv(result.data.frame,"answer.csv")
analysis.function(63,data3,back3,result.data.frame)
data=data3
back=back3
n=63
dates.back=back$Date
data=data3
back=back3
n=63
dates.back=back$Date
dates.back
dates.data=data$YYYYMMDD
dates.data
Adjusted.Price=data$Offset+data$LC
Adjusted.Price
Moving.average.20 = mav(data$TRL,20)
Moving.average.20
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
if(n==40){
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[10]$CL0.value/100,Month1_Raw_Price=t[11]$CL1.value/100,Month5_Raw_Price=t[15]$CL5.value/100,Month1_Minus_Month0=(t[11]$CL1.value-t[10]$CL0.value)/(Moving.average.20[i]*100),Month5_Minus_Month0=(t[15]$CL5.value-t[10]$CL0.value)/(Moving.average.20[i]*100),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[10]$CL0.value,Month1_Raw_Price=t[11]$CL1.value,Month5_Raw_Price=t[15]$CL5.value,Month1_Minus_Month0=(t[11]$CL1.value-t[10]$CL0.value),Month5_Minus_Month0=(t[15]$CL5.value-t[10]$CL0.value),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
}
i
back[back$Date==as.character(dates.data[20]),]
dates.data[i]
n
t[10]$CL0.value
t[11]$CL1.value
t
t[10]
v
back[back$Date==as.character(dates.data[i]),]
t
t[1]
t[2]
t[3]
t[10]
t[10][1]
t[10][1,]
result.data.frame
tail(v)
tail(t[10])
tail(result.data.frame)
t
t[10]
t[10][1,]
analysis.function(63,data3,back3,result.data.frame)
data=data3
back=back3
n=63
f=9
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[f][1,],Month1_Raw_Price=t[f+1][1,],Month5_Raw_Price=t[f+5][1,],Month1_Minus_Month0=(t[f+1][1,]-t[f][1,]),Month5_Minus_Month0=(t[f+5][1,]-t[f][1,]),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
i
f
t[f][1,]
t[f+1][1,]
t[f+5][1,
]
analysis.function(63,data3,back3,result.data.frame)
data=data3
back=back3
n=63
f=9
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[f][1,],Month1_Raw_Price=t[f+1][1,],Month5_Raw_Price=t[f+4][1,],Month1_Minus_Month0=(t[f+1][1,]-t[f][1,]),Month5_Minus_Month0=(t[f+5][1,]-t[f][1,]),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
result.data.frame=data.frame(Date=character(),Security_ID=integer(),Month0_Raw_Price=double(),Month1_Raw_Price=double(),Month5_Raw_Price=double(),Month1_Minus_Month0=double(),Month5_Minus_Month0=double(),TR20=double(),Adj.Price=double(),AdjustedLCPrice30=double(),AdjustedLCPrice60=double(),AdjustedLCPrice90=double(),Return30=double(),Return60=double(),Return90=double())
data=data3
back=back3
n=63
f=9
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[f][1,],Month1_Raw_Price=t[f+1][1,],Month5_Raw_Price=t[f+4][1,],Month1_Minus_Month0=(t[f+1][1,]-t[f][1,]),Month5_Minus_Month0=(t[f+5][1,]-t[f][1,]),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
data=data3
back=back3
n=63
f=9
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[f][1,],Month1_Raw_Price=t[f+1][1,],Month5_Raw_Price=t[f+4][1,],Month1_Minus_Month0=(t[f+1][1,]-t[f][1,]),Month5_Minus_Month0=(t[f+4][1,]-t[f][1,]),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
i
result.data.frame
result.data.frame=analysis.function(63,data3,back3,result.data.frame)
analysis.function = function(n,data,back,result.data.frame){
f=9
dates.back=back$Date
dates.data=data$YYYYMMDD
Adjusted.Price=data$Offset+data$LC
Moving.average.20 = mav(data$TRL,20)
counter=0
for(i in 20:length(dates.data)){
t=  back[back$Date==as.character(dates.data[i]),]
if(is.data.frame(t) && nrow(t)==0){
counter=counter+1
}else{
temp=data.frame(Date=dates.data[i],Security_ID=n,Month0_Raw_Price=t[f][1,],Month1_Raw_Price=t[f+1][1,],Month5_Raw_Price=t[f+4][1,],Month1_Minus_Month0=(t[f+1][1,]-t[f][1,]),Month5_Minus_Month0=(t[f+4][1,]-t[f][1,]),TR20=Moving.average.20[i],Adj.Price=Adjusted.Price[i],AdjustedLCPrice30=Adjusted.Price[i+30] ,AdjustedLCPrice60=Adjusted.Price[i+60],AdjustedLCPrice90=Adjusted.Price[i+90],Return30=(Adjusted.Price[i+30]-Adjusted.Price[i])/Moving.average.20[i],Return60=(Adjusted.Price[i+60]-Adjusted.Price[i])/Moving.average.20[i],Return90=(Adjusted.Price[i+90]-Adjusted.Price[i])/Moving.average.20[i])
result.data.frame=rbind(result.data.frame,temp)
}
}
return(result.data.frame)
}
result.data.frame=analysis.function(63,data3,back3,result.data.frame)
tail(result.data.frame)
write.csv(result.data.frame,"answer.csv")
